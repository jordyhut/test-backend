// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using API.Models;

namespace API.Data
{
    public partial class PromotionContext : DbContext
    {
        public PromotionContext()
        {
        }

        public PromotionContext(DbContextOptions<PromotionContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TblPromotion> TblPromotion { get; set; } = null!;
        public virtual DbSet<TblStore> TblStore { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseNpgsql("Server=192.168.56.101;Port=5432;Database=promotion;User Id=postgres;Password=admin;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TblPromotion>(entity =>
            {
                entity.ToTable("tbl_promotion");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .UseIdentityAlwaysColumn();

                entity.Property(e => e.Description)
                    .HasColumnType("character varying")
                    .HasColumnName("description");

                entity.Property(e => e.DiscountValue).HasColumnName("discount_value");

                entity.Property(e => e.EndDate).HasColumnName("end_date");

                entity.Property(e => e.Item)
                    .HasColumnType("character varying")
                    .HasColumnName("item");

                entity.Property(e => e.PromoTypeId).HasColumnName("promo_type_id");

                entity.Property(e => e.PromotionId)
                    .HasColumnType("character varying")
                    .HasColumnName("promotion_id");

                entity.Property(e => e.StartDate).HasColumnName("start_date");

                entity.Property(e => e.StoreId)
                    .HasMaxLength(3)
                    .HasColumnName("store_id");

                entity.Property(e => e.ValueTypeId).HasColumnName("value_type_id");

                entity.HasOne(d => d.Store)
                    .WithMany(p => p.TblPromotion)
                    .HasForeignKey(d => d.StoreId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("fk_store_id");
            });

            modelBuilder.Entity<TblStore>(entity =>
            {
                entity.HasKey(e => e.Store)
                    .HasName("tbl_store_pkey");

                entity.ToTable("tbl_store");

                entity.Property(e => e.Store)
                    .HasMaxLength(3)
                    .HasColumnName("store");

                entity.Property(e => e.StoreName)
                    .HasMaxLength(30)
                    .HasColumnName("store_name");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}